@import '_variables';
@import '_mixins';
@import '_spacing';

.container-fluid, .container {
  margin-right: auto;
  margin-left: auto;
  padding-right: $gutter-width;
  padding-left: $gutter-width;
}

.container-fluid {
  width: 100%;
}

.container {
  max-width: $screen-sm;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

[class^='col-'] {
  box-sizing: border-box;
  flex: 1 0 auto;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

@each $screen, $width in $screens {
  @include grid($screen, $width) {

    $columnPrefix: '.col';
    $column: #{$columnPrefix}-#{$screen};

    @for $i from 1 through $grid-columns {
      $col-width: percentage($i/$grid-columns);

      #{$column}-#{$i} {
        flex-basis: $col-width;
        max-width: $col-width;
      }

      @if $i < $grid-columns {
        #{$column}-offset-#{$i} {
          margin-left: $col-width;
        }
      }
    }

    @each $alignment, $classes in $alignments {
      $alignmentSuffix: if($screen == all, '', #{'-'}$screen);
      .#{$alignment}#{$alignmentSuffix} {
        @each $classKey, $classValue in $classes {
          #{$classKey}: #{$classValue}
        }
      }
    }

    .flex-#{$screen} {
      display: flex;
    }

    .fill-#{$screen} {
      flex: 1;
    }

    .vertical-#{$screen} {
      flex-direction: column;
    }

    .reverse-#{$screen} {
      flex-direction: row-reverse;
    }

    .collapsed-#{$screen} {
      margin: 0;

      [class^='col-'] {
        padding: 0;
      }
    }
  }
}
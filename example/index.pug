doctype html
html
  head
    title
    link(rel='stylesheet', type='text/css', href='example/example.css')
    link(rel='stylesheet', type='text/css', href='dist/flexed.css')

  body
    mixin code(className)
      div.section-code-example
        if className
          h3= className

        block

        pre
          code.section-code.html
            block

    mixin section(title, description, multipleCodeBlocks)
      a(name=title)
      section.page-section(id=title)
        .container
          h2= title
          p= description
          if multipleCodeBlocks
            block
          else
            +code
              block

    .page
      .wrap
        a(name="hero")
        section#page-hero.page-section
          .container
            h1 Get Flexxed
            p.hero-description The last grid you'll ever need.
            .hero-buttons
              button()

        a(name="installing")
        section.page-section
          .container
            h2 Installation
            .row
              .col.col-sm-6
                h3 Bower
                code bower install --save flexxed
              .col.col-sm-6
                h3 NPM
                code npm install --save flexxed

        a(name='syntax')
        section.page-section
          .container
            h2 Syntactically Simple
            p Row. Column. Content. That's it.
            pre
              code.section-code.html
                .row
                  .col
                    h3 Look at me!

        +section('responsivity', 'Target specific screen sizes with responsive modifiers. All flexed classes have responsive siblings.')
          .row
            .col-12.col-sm-3.col-md-2.col-lg-1
              .box-row
            .col-6.col-sm-6.col-md-8.col-lg-10
              .box-row
            .col-6.col-sm-3.col-md-2.col-lg-1
              .box-row
          .row
            .col-12.col-sm-3.col-md-2.col-lg-1
              .box-row
            .col-12.col-sm-9.col-md-10.col-lg-11
              .box-row
          .row
            .col-10.col-sm-6.col-md-8.col-lg-10
              .box-row
            .col-2.col-sm-6.col-md-4.col-lg-2
              .box-row

        +section('fluidity', 'Percent based widths enable smooth and dynamic resizing.')
          .row
            .col
              .box-row
          .row
            .col-1
              .box-row
            .col-11
              .box-row
          .row
            .col-2
              .box-row
            .col-10
              .box-row
          .row
            .col-3
              .box-row
            .col-9
              .box-row
          .row
            .col-4
              .box-row
            .col-8
              .box-row
          .row
            .col-5
              .box-row
            .col-7
              .box-row
          .row
            .col-6
              .box-row
            .col-6
              .box-row

        +section('offsetting', 'Push columns')
          .row
            .col-1.col-offset-11
              .box-row
          .row
            .col-2.col-offset-10
              .box-row
          .row
            .col-3.col-offset-9
              .box-row
          .row
            .col-4.col-offset-8
              .box-row
          .row
            .col-5.col-offset-7
              .box-row
          .row
            .col-6.col-offset-6
              .box-row
          .row
            .col-7.col-offset-5
              .box-row
          .row
            .col-8.col-offset-4
              .box-row
          .row
            .col-9.col-offset-3
              .box-row
          .row
            .col-10.col-offset-2
              .box-row
          .row
            .col-11.col-offset-1
              .box-row

        +section('automatic', 'Add any number of generic columns to a row and let the grid do the math for you.')
          .row
            .col
              .box-row
            .col
              .box-row
          .row
            .col
              .box-row
            .col
              .box-row
            .col
              .box-row

        +section('nestable', 'Nest all the grids you want.')
          .row
            .col-7
              .box.box-container
                .row
                  .col-9
                    .box-first.box-container
                      .row
                        .col-4
                          .box-nested
                        .col-8
                          .box-nested
                  .col-3
                    .box-first.box-container
                      .row
                        .col
                          .box-nested
            .col-5
              .box.box-container
                .row
                  .col-12
                    .box-first.box-container
                      .row
                        .col-6
                          .box-nested
                        .col-6
                          .box-nested

        +section('alignment', 'Vertical and horizontal alignment has never been easier.', true)
          +code('.justify-start-*')
            .row
              .col
                .box.box-container
                  .row.justify-start
                    .col-6
                      .box-nested

          +code('.justify-center-*')
            .row
              .col
                .box.box-container
                  .row.justify-center
                    .col-6
                      .box-nested

          +code('.justify-end-*')
            .row
              .col
                .box.box-container
                  .row.justify-end
                    .col-6
                      .box-nested

          p Here is an example of using the modifiers in conjunction to acheive different alignment at different viewport sizes.

          +code
            .row
              .col
                .box.box-container
                  .row.justify-center.justify-end-sm.justify-start-lg
                    .col-6
                      .box-nested
          +code('.align-top-*')
            .row.align-top
              .col-6
                .box-large
              .col-6
                .box

          +code('.align-middle-*')
            .row.align-middle
              .col-6
                .box-large
              .col-6
                .box

          +code('.align-bottom-*')
            .row.align-bottom
              .col-6
                .box-large
              .col-6
                .box

        +section('distribution', 'Easily give your elements some room to breathe.', true)
          +code('.space-around-*')
            .box.box-container
              .row.space-around
                .col-2
                  .box-nested
                .col-2
                  .box-nested
                .col-2
                  .box-nested

          +code('.space-between-*')
            .box.box-container
              .row.space-between
                .col-2
                  .box-nested
                .col-2
                  .box-nested
                .col-2
                  .box-nested

          p You can also push elements to the opposite edge by using a filler #[code .col]
          +code
            .box.box-container
              .row
                .col
                  .box-nested
                .col
                .col
                  .box-nested

        +section('reordering', 'Mix \'em up.', true)
          +code('.first-*')
            .row
              .col-12
                .box.box-container
                  .row
                    .col-2
                      .box-first 1
                    .col-2
                      .box-first 2
                    .col-2
                      .box-first 3
                    .col-2
                      .box-first 4
                    .col-2
                      .box-first 5
                    .col-2.first
                      .box-nested 6

          +code('.last-*')
            .row
              .col-12
                .box.box-container
                  .row
                    .col-2.last
                      .box-nested 1
                    .col-2
                      .box-first 2
                    .col-2
                      .box-first 3
                    .col-2
                      .box-first 4
                    .col-2
                      .box-first 5
                    .col-2
                      .box-first 6

        +section('reversing', 'Flip \'em around.', true)
          +code('.row.reverse-*')
            .row
              .col-12
                .box.box-container
                  .row.reverse
                    .col-2
                      .box-nested 1
                    .col-2
                      .box-nested 2
                    .col-2
                      .box-nested 3
                    .col-2
                      .box-nested 4
                    .col-2
                      .box-nested 5
                    .col-2
                      .box-nested 6

        +section('stacking', 'By default, rows layout columns horizontally. However, many layouts call for a mix of the two.', true)
          +code('.vertical-*')
            .box.box-container
              .row
                .col.flex
                  .box-nested.fill
                .col.flex
                  .box-nested.fill
                .col
                  .row.vertical
                    .col.m-b-sm
                      .box-nested
                    .col
                      .box-nested


        +section('spacing', 'Give \'em some room to breathe.', true)
          h3 Margins
          +code('.m-*-*')
            .box.box-container
              .row
                .col-12.m-b-sm
                  .box-nested .m-b-sm
                .col-12
                  .box-nested

          h3 Padding
          +code('.p-*-*')
            .box.box-container
              .row
                .col-12.m-b-sm
                  .box-nested.p-xl .p-xl
                .col-12
                  .box-nested.p-t-lg .p-t-sm



    script(src="example/highlight.pack.js")
    script(src="example/index.js")


